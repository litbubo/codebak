C51 COMPILER V9.60.0.0   IIC                                                               12/11/2021 12:15:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\IIC.obj
COMPILER INVOKED BY: C:\Software\Keil_v5\C51\BIN\C51.EXE IIC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\IIC.lst) OBJECT(.\Objects\IIC.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          
   3          #include "delay.h"
   4          #include "IIC.h"
   5          
   6          sbit SCL = P1 ^ 0;
   7          sbit SDA = P1 ^ 1;
   8          
   9          
  10          //开始信号
  11          void IIC_Start()
  12          {
  13   1          SDA = 1;
  14   1          SCL = 1; 
  15   1          //Delayus(5);
  16   1          SDA = 0;
  17   1          //Delayus(5);
  18   1          SCL = 0;
  19   1      }
  20          
  21          
  22          
  23          //停止信号
  24          void IIC_Stop()
  25          {
  26   1          SDA = 0;
  27   1          SCL = 1;
  28   1          //Delayus(5);
  29   1          SDA = 1;
  30   1          //Delayus(5);
  31   1      }
  32          
  33          
  34          
  35          //发送应答信号
  36          void IIC_SendACK(bit ack)
  37          {
  38   1          SDA = ack;
  39   1          SCL = 1;
  40   1          //Delayus(5);
  41   1          SCL = 0;
  42   1          //Delayus(5);
  43   1      }
  44          
  45          
  46          
  47          //接收应答信号
  48          bit IIC_RecvACK()
  49          {
  50   1          SCL = 1;
  51   1          //Delayus(5);
  52   1          CY = SDA;
  53   1          SCL = 0;
  54   1          //Delayus(5);
C51 COMPILER V9.60.0.0   IIC                                                               12/11/2021 12:15:03 PAGE 2   

  55   1      
  56   1          return CY;
  57   1      }
  58          
  59          
  60          
  61          //向IIC总线发送一个字节数据
  62          void IIC_SendByte(uchar dat)
  63          {
  64   1          uchar i;
  65   1      
  66   1          for (i = 0; i < 8; i++)
  67   1          {
  68   2              dat <<= 1;
  69   2              SDA = CY;
  70   2              SCL = 1;
  71   2              //Delayus(5);
  72   2              SCL = 0;
  73   2              //Delayus(5);
  74   2          }
  75   1          IIC_RecvACK();
  76   1      }
  77          
  78          
  79          
  80          //从IIC总线接收一个字节数据
  81          uchar IIC_RecvByte()
  82          {
  83   1          uchar i;
  84   1          uchar dat = 0;
  85   1      
  86   1          SDA = 1; 
  87   1          for (i = 0; i < 8; i++)
  88   1          {
  89   2              dat <<= 1;
  90   2              SCL = 1;
  91   2              //Delayus(5);
  92   2              dat |= SDA;
  93   2              SCL = 0;
  94   2              //Delayus(5);
  95   2          }
  96   1          return dat;
  97   1      }
  98          
  99          
 100          void IIC_Write_Data(uchar DevAddress, uchar Address, uchar iic_data)
 101          {
 102   1          IIC_Start();
 103   1          IIC_SendByte(DevAddress);
 104   1          IIC_SendByte(Address);  
 105   1          IIC_SendByte(iic_data); 
 106   1          IIC_Stop();
 107   1      }
 108          
 109          
 110          uchar IIC_Read_Data(uchar DevAddress, uchar Address)
 111          {
 112   1          uchar iic_data;
 113   1          IIC_Start();
 114   1          IIC_SendByte(DevAddress); 
 115   1          IIC_SendByte(Address);  
 116   1          IIC_Start();
C51 COMPILER V9.60.0.0   IIC                                                               12/11/2021 12:15:03 PAGE 3   

 117   1          IIC_SendByte(DevAddress + 1);
 118   1          iic_data = IIC_RecvByte();
 119   1          IIC_SendACK(1);
 120   1          IIC_Stop();
 121   1          return iic_data;
 122   1      }
 123          
 124          void IIC_Wait_Ack()
 125          {
 126   1          SCL = 1;
 127   1          SCL = 0;
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
