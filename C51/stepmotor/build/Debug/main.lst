C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Debug\main.o
COMPILER INVOKED BY: C:\Software\Keil_v5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Debug\main.lst) OMF2 TABS(4) CODE NO
                    -COND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(c:\Software\Keil_v5\C51\INC\STC;c:\Software\Keil_v5\C51\INC\Atmel
                    -;C:\Software\Keil_v5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.\build\Debug\main.o)

line level    source

   1          #include <STC89C5xRC.H>
   2          
   3          char up[4] = {0x0c, 0x06, 0x03, 0x09};
   4          int count = 0;
   5          
   6          typedef unsigned int u16; //对数据类型进行声明定义
   7          typedef unsigned char u8;
   8          
   9          u8 IrValue[6];
  10          u8 Time;
  11          
  12          u8 DisplayData[8];
  13          u8 code smgduan[17] = {
  14              0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07,
  15              0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71, 0X76};
  16          //0、1、2、3、4、5、6、7、8、9、A、b、C、d、E、F、H的显示码
  17          void delay(u16 i)
  18          {
  19   1          while (i--)
  20   1              ;
  21   1      }
  22          
  23          void DigDisplay()
  24          {
  25   1          u8 i;
  26   1          for (i = 0; i < 3; i++)
  27   1          {
  28   2              switch (i) //位选，选择点亮的数码管，
  29   2              {
  30   3              case (0):
  31   3                  P22 = 0;
  32   3                  P23 = 0;
  33   3                  P24 = 0;
  34   3                  break; //显示第0位
  35   3              case (1):
  36   3                  P22 = 1;
  37   3                  P23 = 0;
  38   3                  P24 = 0;
  39   3                  break; //显示第1位
  40   3              case (2):
  41   3                  P22 = 0;
  42   3                  P23 = 1;
  43   3                  P24 = 0;
  44   3                  break; //显示第2位
  45   3              }
  46   2              P0 = DisplayData[2 - i]; //发送数据
  47   2              delay(100);              //间隔一段时间扫描
  48   2              P0 = 0x00;               //消隐
  49   2          }
  50   1      }
  51          
  52          /*******************************************************************************
  53          * 函数名         : IrInit()
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 2   

  54          * 函数功能         : 初始化红外线接收
  55          * 输入           : 无
  56          * 输出             : 无
  57          *******************************************************************************/
  58          
  59          void IrInit()
  60          {
  61   1          IT0 = 1; //下降沿触发
  62   1          EX0 = 1; //打开中断0允许
  63   1          EA = 1;  //打开总中断
  64   1      
  65   1          P32 = 1; //初始化端口
  66   1      }
  67          
  68          /*******************************************************************************
  69          * 函 数 名       : main
  70          * 函数功能       : 主函数
  71          * 输    入       : 无
  72          * 输    出         : 无
  73          ***/
  74          
  75          void main(void)
  76          {
  77   1          P1 = 0x00;
  78   1          EA = 1;      //允许CPU中断
  79   1          TMOD = 0x11; //设定时器0和1为16位模式1
  80   1          ET0 = 1;     //定时器0中断允许
  81   1          TH0 = 0xF8;
  82   1          TL0 = 0x30; //设定时每隔2ms中断一次
  83   1          IrInit();
  84   1          while (1)
  85   1          {
  86   2              if (P33 == 0 | 
  87   2                  P31 == 0 | 
  88   2                  (DisplayData[0] == 0x06 && DisplayData[1] == 0x7d) |
  89   2                  (DisplayData[0] == 0x3f && DisplayData[1] == 0x39) )
  90   2              {
  91   3                  TR0 = 1;
  92   3              }
  93   2              else
  94   2              {
  95   3                  TR0 = 0;
  96   3                  P1 = 0X00;
  97   3              }
  98   2      
  99   2              DisplayData[0] = smgduan[IrValue[2] / 16];
 100   2              DisplayData[1] = smgduan[IrValue[2] % 16];
 101   2              DisplayData[2] = smgduan[16];
 102   2              DigDisplay();
 103   2          }
 104   1      }
 105          //定时器0中断处理
 106          void timeint(void) interrupt 1
 107          {
 108   1          TH0 = 0xF8;
 109   1          TL0 = 0x30; //设定时每隔1ms中断一次
 110   1          if (P33 == 0|(DisplayData[0] == 0x06 && DisplayData[1] == 0x7d) )
 111   1          {
 112   2              if (count >= 4)
 113   2              {
 114   3                  count = 0;
 115   3              }
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 3   

 116   2      
 117   2              P1 = up[count++];
 118   2          }
 119   1          else if (P31 == 0 | (DisplayData[0] == 0x3f && DisplayData[1] == 0x39) )
 120   1          {
 121   2      
 122   2              P1 = up[count--];
 123   2              if (count < 0)
 124   2              {
 125   3                  count = 3;
 126   3              }
 127   2          }
 128   1      }
 129          
 130          void ReadIr() interrupt 0
 131          {
 132   1          u8 j, k;
 133   1          u16 err;
 134   1          Time = 0;
 135   1          delay(700);   //7ms
 136   1          if (P32 == 0) //确认是否真的接收到正确的信号
 137   1          {
 138   2      
 139   2              err = 1000; //1000*10us=10ms,超过说明接收到错误的信号
 140   2              /*当两个条件都为真是循环，如果有一个条件为假的时候跳出循环，免得程
             -序出错的时
 141   2              侯，程序死在这里*/
 142   2              while ((P32 == 0) && (err > 0)) //等待前面9ms的低电平过去
 143   2              {
 144   3                  delay(1);
 145   3                  err--;
 146   3              }
 147   2              if (P32 == 1) //如果正确等到9ms低电平
 148   2              {
 149   3                  err = 500;
 150   3                  while ((P32 == 1) && (err > 0)) //等待4.5ms的起始高电平过去
 151   3                  {
 152   4                      delay(1);
 153   4                      err--;
 154   4                  }
 155   3                  for (k = 0; k < 4; k++) //共有4组数据
 156   3                  {
 157   4                      for (j = 0; j < 8; j++) //接收一组数据
 158   4                      {
 159   5      
 160   5                          err = 60;
 161   5                          while ((P32 == 0) && (err > 0)) //等待信号前面的560us低电平过去
 162   5                          {
 163   6                              delay(1);
 164   6                              err--;
 165   6                          }
 166   5                          err = 500;
 167   5                          while ((P32 == 1) && (err > 0)) //计算高电平的时间长度。
 168   5                          {
 169   6                              delay(10); //0.1ms
 170   6                              Time++;
 171   6                              err--;
 172   6                              if (Time > 30)
 173   6                              {
 174   7                                  return;
 175   7                              }
 176   6                          }
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 4   

 177   5                          IrValue[k] >>= 1; //k表示第几组数据
 178   5                          if (Time >= 8)    //如果高电平出现大于565us，那么是1
 179   5                          {
 180   6                              IrValue[k] |= 0x80;
 181   6                          }
 182   5                          Time = 0; //用完时间要重新赋值
 183   5                      }
 184   4                  }
 185   3              }
 186   2              if (IrValue[2] != ~IrValue[3])
 187   2              {
 188   3                  return;
 189   3              }
 190   2          }
 191   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0068 (BEGIN)
0000         L?0069:
0000 7F01              MOV     R7,#01H
0002 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 17
;---- Variable 'i' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 18
0004         ?C0001:
                                           ; SOURCE LINE # 19
0004 EF                MOV     A,R7
0005 1F                DEC     R7
0006 AC06              MOV     R4,AR6
0008 7001              JNZ     ?C0060
000A 1E                DEC     R6
000B         ?C0060:
000B 4C                ORL     A,R4
000C 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 21
000E 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION DigDisplay (BEGIN)
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 26
;---- Variable 'i' assigned to Register 'R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002         ?C0004:
0002 ED                MOV     A,R5
0003 C3                CLR     C
0004 9403              SUBB    A,#03H
0006 7480              MOV     A,#080H
0008 9480              SUBB    A,#080H
000A 5034              JNC     ?C0011
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
000C ED                MOV     A,R5
000D 14                DEC     A
000E 600B              JZ      ?C0009
0010 14                DEC     A
0011 6010              JZ      ?C0010
0013 2402              ADD     A,#02H
0015 7012              JNZ     ?C0007
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
0017         ?C0008:
                                           ; SOURCE LINE # 31
0017 C2A2              CLR     P22
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0019 8002              SJMP    ?C0067
                                           ; SOURCE LINE # 35
001B         ?C0009:
                                           ; SOURCE LINE # 36
001B D2A2              SETB    P22
                                           ; SOURCE LINE # 37
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 6   

001D         ?C0067:
001D C2A3              CLR     P23
                                           ; SOURCE LINE # 38
001F C2A4              CLR     P24
                                           ; SOURCE LINE # 39
0021 8006              SJMP    ?C0007
                                           ; SOURCE LINE # 40
0023         ?C0010:
                                           ; SOURCE LINE # 41
0023 C2A2              CLR     P22
                                           ; SOURCE LINE # 42
0025 D2A3              SETB    P23
                                           ; SOURCE LINE # 43
0027 C2A4              CLR     P24
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0029         ?C0007:
                                           ; SOURCE LINE # 46
0029 C3                CLR     C
002A 7402              MOV     A,#02H
002C 9D                SUBB    A,R5
002D 2400        R     ADD     A,#LOW DisplayData
002F F8                MOV     R0,A
0030 E6                MOV     A,@R0
0031 F580              MOV     P0,A
                                           ; SOURCE LINE # 47
0033 7F64              MOV     R7,#064H
0035 7E00              MOV     R6,#00H
0037 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 48
003A E4                CLR     A
003B F580              MOV     P0,A
                                           ; SOURCE LINE # 49
003D 0D                INC     R5
003E 80C2              SJMP    ?C0004
                                           ; SOURCE LINE # 50
0040         ?C0011:
0040 22                RET     
             ; FUNCTION DigDisplay (END)

             ; FUNCTION IrInit (BEGIN)
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0000 D288              SETB    IT0
                                           ; SOURCE LINE # 62
0002 D2A8              SETB    EX0
                                           ; SOURCE LINE # 63
0004 D2AF              SETB    EA
                                           ; SOURCE LINE # 65
0006 D2B2              SETB    P32
                                           ; SOURCE LINE # 66
0008 22                RET     
             ; FUNCTION IrInit (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
0000 E4                CLR     A
0001 F590              MOV     P1,A
                                           ; SOURCE LINE # 78
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 7   

0003 D2AF              SETB    EA
                                           ; SOURCE LINE # 79
0005 758911            MOV     TMOD,#011H
                                           ; SOURCE LINE # 80
0008 D2A9              SETB    ET0
                                           ; SOURCE LINE # 81
000A 758CF8            MOV     TH0,#0F8H
                                           ; SOURCE LINE # 82
000D 758A30            MOV     TL0,#030H
                                           ; SOURCE LINE # 83
0010 120000      R     LCALL   IrInit
0013         ?C0013:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0013 E500        R     MOV     A,DisplayData
0015 6406              XRL     A,#06H
0017 700B              JNZ     ?C0016
0019 E500        R     MOV     A,DisplayData+01H
001B 647D              XRL     A,#07DH
001D 7005              JNZ     ?C0016
001F FE                MOV     R6,A
0020 7F01              MOV     R7,#01H
0022 8004              SJMP    ?C0017
0024         ?C0016:
0024 7E00              MOV     R6,#00H
0026 7F00              MOV     R7,#00H
0028         ?C0017:
0028 7C00              MOV     R4,#00H
002A 20B104            JB      P31,?C0018
002D 7D01              MOV     R5,#01H
002F 8002              SJMP    ?C0019
0031         ?C0018:
0031 7D00              MOV     R5,#00H
0033         ?C0019:
0033 7A00              MOV     R2,#00H
0035 20B304            JB      P33,?C0020
0038 7B01              MOV     R3,#01H
003A 8002              SJMP    ?C0021
003C         ?C0020:
003C 7B00              MOV     R3,#00H
003E         ?C0021:
003E EA                MOV     A,R2
003F 4C                ORL     A,R4
0040 FC                MOV     R4,A
0041 EB                MOV     A,R3
0042 4D                ORL     A,R5
0043 FD                MOV     R5,A
0044 EC                MOV     A,R4
0045 4E                ORL     A,R6
0046 FE                MOV     R6,A
0047 ED                MOV     A,R5
0048 4F                ORL     A,R7
0049 FF                MOV     R7,A
004A E500        R     MOV     A,DisplayData
004C 643F              XRL     A,#03FH
004E 700B              JNZ     ?C0022
0050 E500        R     MOV     A,DisplayData+01H
0052 6439              XRL     A,#039H
0054 7005              JNZ     ?C0022
0056 FC                MOV     R4,A
0057 7D01              MOV     R5,#01H
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 8   

0059 8004              SJMP    ?C0023
005B         ?C0022:
005B 7C00              MOV     R4,#00H
005D 7D00              MOV     R5,#00H
005F         ?C0023:
005F EE                MOV     A,R6
0060 4C                ORL     A,R4
0061 FE                MOV     R6,A
0062 EF                MOV     A,R7
0063 4D                ORL     A,R5
0064 4E                ORL     A,R6
0065 6004              JZ      ?C0015
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0067 D28C              SETB    TR0
                                           ; SOURCE LINE # 92
0069 8005              SJMP    ?C0024
006B         ?C0015:
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
006B C28C              CLR     TR0
                                           ; SOURCE LINE # 96
006D E4                CLR     A
006E F590              MOV     P1,A
                                           ; SOURCE LINE # 97
0070         ?C0024:
                                           ; SOURCE LINE # 99
0070 E500        R     MOV     A,IrValue+02H
0072 C4                SWAP    A
0073 540F              ANL     A,#0FH
0075 900000      R     MOV     DPTR,#smgduan
0078 93                MOVC    A,@A+DPTR
0079 F500        R     MOV     DisplayData,A
                                           ; SOURCE LINE # 100
007B E500        R     MOV     A,IrValue+02H
007D 540F              ANL     A,#0FH
007F 93                MOVC    A,@A+DPTR
0080 F500        R     MOV     DisplayData+01H,A
                                           ; SOURCE LINE # 101
0082 900000      R     MOV     DPTR,#smgduan+010H
0085 E4                CLR     A
0086 93                MOVC    A,@A+DPTR
0087 F500        R     MOV     DisplayData+02H,A
                                           ; SOURCE LINE # 102
0089 120000      R     LCALL   DigDisplay
                                           ; SOURCE LINE # 103
008C 8085              SJMP    ?C0013
             ; FUNCTION main (END)

             ; FUNCTION timeint (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
0009 C002              PUSH    AR2
000B C003              PUSH    AR3
000D C004              PUSH    AR4
000F C005              PUSH    AR5
0011 C006              PUSH    AR6
0013 C007              PUSH    AR7
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 9   

0015 758CF8            MOV     TH0,#0F8H
                                           ; SOURCE LINE # 109
0018 758A30            MOV     TL0,#030H
                                           ; SOURCE LINE # 110
001B AF00        R     MOV     R7,DisplayData
001D 7E00              MOV     R6,#00H
001F EF                MOV     A,R7
0020 6406              XRL     A,#06H
0022 700B              JNZ     ?C0027
0024 E500        R     MOV     A,DisplayData+01H
0026 647D              XRL     A,#07DH
0028 7005              JNZ     ?C0027
002A FC                MOV     R4,A
002B 7D01              MOV     R5,#01H
002D 8004              SJMP    ?C0028
002F         ?C0027:
002F 7C00              MOV     R4,#00H
0031 7D00              MOV     R5,#00H
0033         ?C0028:
0033 7A00              MOV     R2,#00H
0035 20B304            JB      P33,?C0029
0038 7B01              MOV     R3,#01H
003A 8002              SJMP    ?C0030
003C         ?C0029:
003C 7B00              MOV     R3,#00H
003E         ?C0030:
003E EA                MOV     A,R2
003F 4C                ORL     A,R4
0040 FC                MOV     R4,A
0041 EB                MOV     A,R3
0042 4D                ORL     A,R5
0043 4C                ORL     A,R4
0044 6024              JZ      ?C0026
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
0046 C3                CLR     C
0047 E500        R     MOV     A,count+01H
0049 9404              SUBB    A,#04H
004B E500        R     MOV     A,count
004D 6480              XRL     A,#080H
004F 9480              SUBB    A,#080H
0051 4006              JC      ?C0031
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0053 750000      R     MOV     count,#00H
0056 750000      R     MOV     count+01H,#00H
                                           ; SOURCE LINE # 115
0059         ?C0031:
                                           ; SOURCE LINE # 117
0059 0500        R     INC     count+01H
005B E500        R     MOV     A,count+01H
005D 7002              JNZ     ?C0061
005F 0500        R     INC     count
0061         ?C0061:
0061 14                DEC     A
0062 2400        R     ADD     A,#LOW up
0064 F8                MOV     R0,A
0065 E6                MOV     A,@R0
0066 F590              MOV     P1,A
                                           ; SOURCE LINE # 118
0068 8045              SJMP    ?C0039
006A         ?C0026:
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 10  

                                           ; SOURCE LINE # 119
006A EF                MOV     A,R7
006B 643F              XRL     A,#03FH
006D 4E                ORL     A,R6
006E 700B              JNZ     ?C0034
0070 E500        R     MOV     A,DisplayData+01H
0072 6439              XRL     A,#039H
0074 7005              JNZ     ?C0034
0076 FE                MOV     R6,A
0077 7F01              MOV     R7,#01H
0079 8004              SJMP    ?C0035
007B         ?C0034:
007B 7E00              MOV     R6,#00H
007D 7F00              MOV     R7,#00H
007F         ?C0035:
007F 7C00              MOV     R4,#00H
0081 20B104            JB      P31,?C0036
0084 7D01              MOV     R5,#01H
0086 8002              SJMP    ?C0037
0088         ?C0036:
0088 7D00              MOV     R5,#00H
008A         ?C0037:
008A EC                MOV     A,R4
008B 4E                ORL     A,R6
008C FE                MOV     R6,A
008D ED                MOV     A,R5
008E 4F                ORL     A,R7
008F 4E                ORL     A,R6
0090 601D              JZ      ?C0039
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 122
0092 E500        R     MOV     A,count+01H
0094 1500        R     DEC     count+01H
0096 7002              JNZ     ?C0062
0098 1500        R     DEC     count
009A         ?C0062:
009A 2400        R     ADD     A,#LOW up
009C F8                MOV     R0,A
009D E6                MOV     A,@R0
009E F590              MOV     P1,A
                                           ; SOURCE LINE # 123
00A0 C3                CLR     C
00A1 E500        R     MOV     A,count
00A3 6480              XRL     A,#080H
00A5 9480              SUBB    A,#080H
00A7 5006              JNC     ?C0039
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
00A9 750000      R     MOV     count,#00H
00AC 750003      R     MOV     count+01H,#03H
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
00AF         ?C0039:
00AF D007              POP     AR7
00B1 D006              POP     AR6
00B3 D005              POP     AR5
00B5 D004              POP     AR4
00B7 D003              POP     AR3
00B9 D002              POP     AR2
00BB D000              POP     AR0
00BD D0D0              POP     PSW
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 11  

00BF D0E0              POP     ACC
00C1 32                RETI    
             ; FUNCTION timeint (END)

             ; FUNCTION ReadIr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
0009 C002              PUSH    AR2
000B C003              PUSH    AR3
000D C004              PUSH    AR4
000F C005              PUSH    AR5
0011 C006              PUSH    AR6
0013 C007              PUSH    AR7
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 134
0015 750000      R     MOV     Time,#00H
                                           ; SOURCE LINE # 135
0018 7FBC              MOV     R7,#0BCH
001A 7E02              MOV     R6,#02H
001C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 136
001F 30B203            JNB     P32,$ + 6H
0022 020000      R     LJMP    ?C0057
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 139
;---- Variable 'err' assigned to Register 'R2/R3' ----
0025 7BE8              MOV     R3,#0E8H
0027 7A03              MOV     R2,#03H
0029         ?C0041:
                                           ; SOURCE LINE # 142
0029 20B213            JB      P32,?C0042
002C D3                SETB    C
002D EB                MOV     A,R3
002E 9400              SUBB    A,#00H
0030 EA                MOV     A,R2
0031 9400              SUBB    A,#00H
0033 400A              JC      ?C0042
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
0035 120000      R     LCALL   L?0068
                                           ; SOURCE LINE # 145
0038 EB                MOV     A,R3
0039 1B                DEC     R3
003A 70ED              JNZ     ?C0041
003C 1A                DEC     R2
003D         ?C0063:
                                           ; SOURCE LINE # 146
003D 80EA              SJMP    ?C0041
003F         ?C0042:
                                           ; SOURCE LINE # 147
003F 20B203            JB      P32,$ + 6H
0042 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
0045 7A01              MOV     R2,#01H
0047 7BF4              MOV     R3,#0F4H
0049         ?C0044:
                                           ; SOURCE LINE # 150
0049 30B213            JNB     P32,?C0045
004C D3                SETB    C
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 12  

004D EB                MOV     A,R3
004E 9400              SUBB    A,#00H
0050 EA                MOV     A,R2
0051 9400              SUBB    A,#00H
0053 400A              JC      ?C0045
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
0055 120000      R     LCALL   L?0068
                                           ; SOURCE LINE # 153
0058 EB                MOV     A,R3
0059 1B                DEC     R3
005A 70ED              JNZ     ?C0044
005C 1A                DEC     R2
005D         ?C0064:
                                           ; SOURCE LINE # 154
005D 80EA              SJMP    ?C0044
005F         ?C0045:
                                           ; SOURCE LINE # 155
;---- Variable 'k' assigned to Register 'R5' ----
005F E4                CLR     A
0060 FD                MOV     R5,A
0061         ?C0046:
0061 ED                MOV     A,R5
0062 C3                CLR     C
0063 9404              SUBB    A,#04H
0065 7480              MOV     A,#080H
0067 9480              SUBB    A,#080H
0069 4003              JC      $ + 5H
006B 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
006E 750000      R     MOV     j,#00H
0071         ?C0049:
0071 C3                CLR     C
0072 E500        R     MOV     A,j
0074 9408              SUBB    A,#08H
0076 7480              MOV     A,#080H
0078 9480              SUBB    A,#080H
007A 506B              JNC     ?C0048
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 160
007C 7A00              MOV     R2,#00H
007E 7B3C              MOV     R3,#03CH
0080         ?C0052:
                                           ; SOURCE LINE # 161
0080 20B213            JB      P32,?C0053
0083 D3                SETB    C
0084 EB                MOV     A,R3
0085 9400              SUBB    A,#00H
0087 EA                MOV     A,R2
0088 9400              SUBB    A,#00H
008A 400A              JC      ?C0053
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
008C 120000      R     LCALL   L?0069
                                           ; SOURCE LINE # 164
008F EB                MOV     A,R3
0090 1B                DEC     R3
0091 70ED              JNZ     ?C0052
0093 1A                DEC     R2
0094         ?C0065:
                                           ; SOURCE LINE # 165
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 13  

0094 80EA              SJMP    ?C0052
0096         ?C0053:
                                           ; SOURCE LINE # 166
0096 7A01              MOV     R2,#01H
0098 7BF4              MOV     R3,#0F4H
009A         ?C0054:
                                           ; SOURCE LINE # 167
009A 30B224            JNB     P32,?C0055
009D D3                SETB    C
009E EB                MOV     A,R3
009F 9400              SUBB    A,#00H
00A1 EA                MOV     A,R2
00A2 9400              SUBB    A,#00H
00A4 401B              JC      ?C0055
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
00A6 7F0A              MOV     R7,#0AH
00A8 7E00              MOV     R6,#00H
00AA 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 170
00AD 0500        R     INC     Time
                                           ; SOURCE LINE # 171
00AF EB                MOV     A,R3
00B0 1B                DEC     R3
00B1 7001              JNZ     ?C0066
00B3 1A                DEC     R2
00B4         ?C0066:
                                           ; SOURCE LINE # 172
00B4 D3                SETB    C
00B5 E500        R     MOV     A,Time
00B7 941E              SUBB    A,#01EH
00B9 7480              MOV     A,#080H
00BB 9480              SUBB    A,#080H
00BD 40DB              JC      ?C0054
                                           ; SOURCE LINE # 173
00BF 802A              SJMP    ?C0057
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
00C1         ?C0055:
                                           ; SOURCE LINE # 177
00C1 7400        R     MOV     A,#LOW IrValue
00C3 2D                ADD     A,R5
00C4 F8                MOV     R0,A
00C5 C000              PUSH    AR0
00C7 E6                MOV     A,@R0
00C8 C3                CLR     C
00C9 13                RRC     A
00CA D000              POP     AR0
00CC F6                MOV     @R0,A
                                           ; SOURCE LINE # 178
00CD C3                CLR     C
00CE E500        R     MOV     A,Time
00D0 9408              SUBB    A,#08H
00D2 7480              MOV     A,#080H
00D4 9480              SUBB    A,#080H
00D6 4008              JC      ?C0058
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
00D8 7400        R     MOV     A,#LOW IrValue
00DA 2D                ADD     A,R5
00DB F8                MOV     R0,A
00DC E6                MOV     A,@R0
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 14  

00DD 4480              ORL     A,#080H
00DF F6                MOV     @R0,A
                                           ; SOURCE LINE # 181
00E0         ?C0058:
                                           ; SOURCE LINE # 182
00E0 750000      R     MOV     Time,#00H
                                           ; SOURCE LINE # 183
00E3 0500        R     INC     j
00E5 808A              SJMP    ?C0049
                                           ; SOURCE LINE # 184
00E7         ?C0048:
00E7 0D                INC     R5
00E8 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 185
00EB         ?C0043:
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
00EB         ?C0057:
00EB D007              POP     AR7
00ED D006              POP     AR6
00EF D005              POP     AR5
00F1 D004              POP     AR4
00F3 D003              POP     AR3
00F5 D002              POP     AR2
00F7 D000              POP     AR0
00F9 D0D0              POP     PSW
00FB D0E0              POP     ACC
00FD 32                RETI    
             ; FUNCTION ReadIr (END)

C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 15  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


timeint. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
XICON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ISP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
EC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
FE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
Time . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
ISP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
count. . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
ISP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
ISP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
ReadIr . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  j. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  k. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  err. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
IrValue. . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0003H  6
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
C51 COMPILER V9.60.0.0   MAIN                                                              08/07/2021 10:54:46 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
IrInit . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
ISP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
DisplayData. . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0009H  8
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
up . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0011H  4
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2MOD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ISP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
DigDisplay . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
AUXR1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
smgduan. . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  17
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    685    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
